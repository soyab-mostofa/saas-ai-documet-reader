// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @unique // matches kinde user id
  email String @unique
  files File[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripesubscriptionld   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

enum UploadStatus {
  PENDING
  PROCESSING
  SUCCESS
  FAILED
}

enum FileStatus {
  RECYCLED
  SUCCESS
  LIVE
}

model File {
  id         String     @id @default(cuid())
  name       String
  fileStatus FileStatus @default(LIVE)
  url        String
  key        String

  uploadStaus UploadStatus @default(PENDING)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  User        User?        @relation(fields: [userId], references: [id])
  userId      String?
}
